# login.js

import router from '../router'
import axios from 'axios'
import md5 from 'js-md5'

export default {
  axios: function (username, password) {
    var params = new URLSearchParams();
    params.append('username', username);
    params.append('password', md5(password))
    axios.post('http://192.168.1.239/iron_wall/admin/test/login', params, {
        headers: {
          'Content-Type': 'application/x-www-form-urlencoded'
        }
      })
      .then(res => {
        this.login()
        var str = res.data.data
        str = JSON.stringify(str)
        localStorage.setItem('resdata', str)
        console.log(res)
      })
      .catch(error => {
        console.log(error);
      });
  },
  viewdata: function () {
    var obj = JSON.parse(localStorage.getItem('resdata'))
    return obj
  },
  login: function (username, password) {
    if (username === 'admin' && password === 'admin') {
      localStorage.setItem('username', username)
      localStorage.setItem('password', password)
      return true
    } else {
      return false
    }
  },

  logout: function () {
    localStorage.removeItem('username')
    localStorage.removeItem('password')
    localStorage.removeItem('resdata')
    return true
  },

  loginSuccess: function () {
    return ('Home')
  },

  logoutSuccess: function () {
    return ('/')
  },

  check: function () {
    if (window.localStorage.getItem('username') === null && window.localStorage.getItem('password') === null) {
      console.log('true')
      return true
    } else {
      console.log('false')
      return false
    }
  },
}



# Login.vue
<template>
    <div id="app">
    
        <!-- <form method="post" @submit.prevent="login"> -->
        <label>用户名</label>
        <input type="text" name="用户名" required v-model="formData.username">
        <br>
        <label>密码</label>
        <input type="password" name="密码" required v-model="formData.password">
        <br>
        <!-- <input type="submit" value="登录"> -->
        <button class="login" @click="axios(login())">登录</button>
        <!-- </form> -->
    </div>
</template>

<script>
import Home from './Home'
import axios from 'axios'
import md5 from 'js-md5'
import Auth from '../lib/login.js'
import router from '../router'
export default {
    data() {
        return {
            formData: {
                username: '',
                password: '',
            },
        }
    },
    computed: {
    },
    mounted() {
        if (!Auth.check()) {
            console.log('1')
            router.push(Auth.loginSuccess())
        }
    },
    methods: {
        login() {
            if (Auth.login(this.formData.username, this.formData.password)) {
                router.push(Auth.loginSuccess())
            } else {
                alert('用户名或密码错误')
            }
        },
        axios() {
            return Auth.axios(this.formData.username, this.formData.password)
        }
    }
}
</script>
<style>

</style>



# Home.vue
<template>
    <div class="table-ct">
        <h1 v-for="(mydata_info,mydata_key) in myData">你好：{{mydata_info.name}}</h1>
        <a>
            <el-button type="primary" size="small" v-for="(config_info,config_key) in config" :key="config_key" @click="changeSource(config_key)">{{config_info.button}}</el-button>
        </a>
        <table class="ct">
            <thead>
                <tr class="head">
                    <th v-for="(mydata_info,mydata_key) in myData.a">
                        {{mydata_key}}
                    </th>
                </tr>
            </thead>
            <tbody>
                <tr class="body" v-for="(mydata_info,mydata_key) in myData">
                    <td v-for="(a_info,a_key) in myData.a">
                        {{a_info}}
                    </td>
                </tr>
            </tbody>
            <tfoot>
            </tfoot>
        </table>
        <el-pagination @size-change="handleSizeChange" @current-change="handleCurrentChange" :current-page="currentPage" :page-sizes="[10, 20, 30, 40]" :page-size="pageSize" layout="total, sizes, prev, pager, next, jumper" :total="content.length">
        </el-pagination>
        <button class="logout" @click="logout()">退出</button>
    </div>
</template>
<script>
import Auth from '../lib/login.js'
import router from '../router'
export default {
    data() {
        return {
            myData: {},
            currentPage: 1,
            //默认每页数据量
            pageSize: 10,
            //表格当前页数据
            showPage: [],
            content: [],
            header: [],
            config: {
                user: {
                    button: '用户',
                    fields: [
                        { key: 'name', name: '姓名' },
                        { key: 'sex', name: '性别' },
                        { key: 'age', name: '年龄' },
                    ],
                    data: [
                        { name: '小明', age: '18', sex: '男' },
                        { name: '小红', age: '23', sex: '女' },
                        { name: '张三', age: '35', sex: '男' },
                        { name: '李四', age: '32', sex: '男' },
                        { name: '刘二', age: '23', sex: '女' },
                        { name: '王五', age: '23', sex: '男' },
                        { name: '西门', age: '38', sex: '男' },
                        { name: '二丫', age: '28', sex: '女' },
                        { name: '李四', age: '32', sex: '男' },
                        { name: '刘二', age: '23', sex: '女' },
                        { name: '王五', age: '23', sex: '男' },
                        { name: '西门', age: '38', sex: '男' },
                    ],
                },

                main: {
                    button: '内容',
                    fields: [
                        { key: 'title', name: '标题' },
                        { key: 'author', name: '作者' },
                        { key: 'time', name: '时间' },
                        { key: 'state', name: '状态' },
                    ],
                    data: [
                        { title: '一', author: '小明', time: '2012-02-21', state: '完成' },
                        { title: '二', author: '小红', time: '2011-11-31', state: '未完成' },
                        { title: '三', author: '李四', time: '2004-03-11', state: '完成' },
                        { title: '四', author: '二丫', time: '2013-07-12', state: '完成' },
                        { title: '五', author: '小红', time: '2011-12-17', state: '未完成' },
                        { title: '六', author: '李四', time: '2016-05-01', state: '未完成' },
                        { title: '七', author: '王五', time: '2017-05-06', state: '完成' },
                        { title: '八', author: '西门', time: '2011-04-26', state: '完成' },
                        { title: '九', author: '刘二', time: '2033-02-21', state: '完成' },
                        { title: '十', author: '小明', time: '2023-06-13', state: '未完成' },
                        { title: '十一', author: '刘二', time: '2001-10-30', state: '完成' },
                    ]
                },

            }
        }
    },
    created(){
        
    },
    computed: {
        pageContent: function () {
            return this.content.slice((this.currentPage - 1) * this.pageSize, (this.currentPage * this.pageSize));
        },  
    },
    mounted() {
        if (Auth.check()) {
            router.push(Auth.logoutSuccess())
        };
        this.changeSource('user');
        this.xxx()
        console.log(this.myData)
    },
   
    methods: {
        xxx(){
           this.myData.a=Auth.viewdata()
        },
        changeSource(source) {
            this.content = this.config[source].data;
            this.header = this.config[source].fields;
            this.showPage = this.handleCurrentChange(1)
        },

        handleSizeChange(val) {
            console.log(`每页 ${val} 条`);
            this.pageSize = val
            this.handleCurrentChange(1)
        },

        handleCurrentChange(page) {
            this.currentPage = page
            return (this.showPage = this.content.slice((page - 1) * this.pageSize, (page * this.pageSize)))
        },

        logout() {
            if (Auth.logout()) {
                router.push(Auth.logoutSuccess())
            }
        }
    }
}
</script>

<style>
.table-ct {
    display: flex;
    flex-direction: column;
    align-items: center;
}

table {
    max-height: 400px;
}

* {
    margin: 0;
    padding: 0;
}

.el-pagination {
    margin: 10px;
}

button {
    width: 50px;
}

.logout {
    margin-top: 20px;
}

.head {
    display: flex;
}

.body {
    display: flex;
    flex-wrap: wrap;
}

.body td {
    min-height: 40px;
    border: 1px solid #ccc;
    width: 150px;
    word-break:break-all
}

.head th {
    list-style: none;
    flex-direction: column;
    min-height: 40px;
    border: 1px solid #ccc;
    width: 150px;
}
</style>
